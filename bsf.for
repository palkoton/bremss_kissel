C  BSF.FOR, VERSION JAN 29, 1986 (DATE ALSO IN FORMAT 1).
C
C  BREMSSTRAHLUNG SHAPE FUNCTIONS.
C
C  MODIFICATION LOG:
C    JAN 29, 1986 - (L. KISSEL, SNL) MODIFY CODE FOR STANDARD ANSI
C  FORTRAN 77.  REMOVE HOLLERITH STATEMENTS AND REPLACE WITH
C  CHARACTER STRINGS.  USE EXPLICIT STATEMENT TO OPEN
C  INPUT FILES AND CREATE OUTPUT FILE.  SPLIT BENCHMARK DATA FROM
C  ENERGY-SPECTRUM DATA; PUT IN SEPARATE FILES.  PROTECT AGAINST USER
C  VALUES OF T1 AND Z OUTSIDE RANGE OF CODE.  CORRECT T1=1 BUG IN
C  LOOP 81.  ADD HEADER RECORDS TO FILES CONTAINING BENCHMARK DATA
C  AND ENERGY-SPECTRUM DATA.
C    FEB 22, 1984 - (C.A.QUARLES, TCU) ORIGINAL VERSION.
C
C    PROGRAM TO COMPUTE SHAPE FUNCTIONS AND PRINT OUT IN PUBLICATION
C  FORM.  BENCHMARK DATA AND PHOTON ENERGY SPECTRA ARE READ
C  FROM DISK FILES ON UNIT #10.  A LINEAR INTERPOLATION IS DONE TO OBTAIN
C  PHOTON ENERGY SPECTRA FOR ENERGY EN.  B VALUES ARE COMPUTED FOR EN
C  AND ATOMIC #Z IN A CUBIC SPLINE INTERPOLATION OVER THE BENCHMARK DATA
C  OUTPUT IS IN THE FORM OF AT.&NUCL. DATA TABLES, ON FILE BSF.OUT
C  ON UNIT #11.
C
C  SOME DEFINITIONS:
C     BD(ENERGY,B-VALUE,Z,K/T) IS THE ARRAY OF BENCHMARK DATA FOR 6
C             ENERGIES, 5 B-VALUES, 6 Z'S, AND 4 K/T'S
C     KAR IS THE ARRAY OF 4 VALUES OF K/T BENCHMARK VALUES
C     XKAR IS THE ARRAY OF 12 VALUES OF K/T EVALUATED
C     JAR IS THE ARRAY OF 6 BENCHMARK VALUES OF Z
C     B1(B-VALUE,Z,K/T) IS THE ARRAY OF B-VALUES RESULTING FROM THE
C             CUBIC SPLINE INTERPOLATION
C     SARK(K/T,ANGLE) IS THE ARRAY OF SHAPE FUNCTIONS
C     SIG IS THE ARRAY OF PHOTON ENERGY SPECTRA
C     ENTEST IS THE ARRAY OF 12 ENERGY VALUES OF PHOTON ENERGY SPECTRA
C     COST AND SINT ARE ARRAYS OF SINES AND COSINES USED
C     B, SAR, IANG ARE FOR TEMPORARY USE
C
C     SUBROUTINE SPRATT COMPUTES THE SHAPE FUNCTIONS
C     SUBROUTINE SPCOFF AND FUNCTION SPLINE ARE USED TO DO THE
C             CUBIC SPLINE INTERPOLATIONS
C     XN, FN, S, INDEX ARE USED IN SPCOFF AND SPLINE
C
      PROGRAM BSF
C.....
C
C  DECLARATIONS.
C
      INTEGER Z
      CHARACTER HEADER*1
      DIMENSION B1(5,91,11),FN(6),XN(6),S(6),INDEX(6),AA(11)
      DIMENSION KAR(4),JAR(6),XKAR(12)
      DIMENSION SAR(37), SIG(2,12),ENTEST(12),SARK(12,37),IANG(37)
      DIMENSION B(6),BD(6,5,6,4),BETA(6)
      DIMENSION COST(1800),SINT(1800)
      DATA KAR/1,7,9,11/,JAR/1,7,12,46,78,91/,NKAR/4/,NJAR/6/
      DATA XKAR/0.,.1,.2,.3,.4,.5,.6,.7,.8,.9,.95,1.0/
C    DATA FOR 1 KEV
      DATA BETA(1)/0.06246/
C   DATA FOR 5 KEV
      DATA BETA(2)/.13887/
C  DATA FOR 10 KEV
      DATA BETA(3)/0.19498/
C  DATA FOR 50 KEV
      DATA BETA(4)/.41268/
C   DATA FOR 100 KEV
      DATA BETA(5)/.54822/
C   DATA FOR 500 KEV
      DATA BETA(6)/.86286/
C   ENERGY GRID OF ENERGY-SPECTRUM DATA
      DATA ENTEST/1.0,2.5,5.,10.,25.,50.,75.,100.,200.,300.,400.,500./
C.....
C
C  TELL THE USER WHO WE ARE.
C
      PRINT 1
    1 FORMAT
     *  (  ' BSF: BREMSSTRAHLUNG SHAPE FUNCTIONS.'
     *  ,/,' BSF: VERSION JAN 29, 1986.'
     *  ,/,' BSF: THIS PROGRAM COMPUTES TABULATIONS AS PUBLISHED IN:'
     *  ,/,'   "SHAPE FUNCTIONS FOR ATOMIC-FIELD BREMSSTRAHLUNG FROM'
     *  ,/,'    ELECTRONS OF KINETIC ENERGY 1-500 keV ON SELECTED'
     *  ,/,'    NEUTRAL ATOMS 1<=Z<=92", Lynn Kissel, C. A. Quarles,'
     *  ,/,'    R. H. Pratt, Atomic Data and Nuclear Data Tables, 28,'
     *  ,/,'    381-460 (1983).'
     *  )
C.....
C
C  INITIALIZATIONS.
C
C  OPEN AND READ FILE CONTAINING BENCHMARK DATA.
C
      OPEN(UNIT=10,FILE='BMDATA.DAT',STATUS='OLD')
      READ(10,'(A)') HEADER
      DO 10 I=1,6
        DO 10 K=1,6
          DO 10 L=1,4
            READ(10,*)(BD(I,J,K,L),J=1,5)
   10 CONTINUE
      CLOSE(UNIT=10)
C
C  OPEN FILE CONTAINING ENERGY SPECTRUM DATA.
C
      OPEN(UNIT=10,FILE='ESPEC.DAT',STATUS='OLD')
C
C  CREATE FILE TO RECEIVE OUTPUT TABLES.
C
      OPEN(UNIT=11,FILE='BSF.OUT',STATUS='NEW')
C
C COMPUTE SINES AND COSINES NEEDED
C
      DO 450 I=1,1800
        TH=FLOAT(I)*.0017453293
        COST(I)=COS(TH)
  450   SINT(I)=SIN(TH)
C.....
C
C LOOP OVER USER VALUES OF Z, T1.
C
 1000 CONTINUE
      PRINT '(A)',' BSF: ##################'
 1010 PRINT '(A)',' BSF: ENTER Z (0=>STOP)?'
      READ *,Z
      IF (Z.EQ.0) THEN
        STOP
      ELSEIF ((Z.LT.2).OR.(92.LT.Z)) THEN
        PRINT '(A)',' *** BSF: VALUE OF Z OUTSIDE RANGE 2-92.'
        GOTO 1010
      ENDIF
 1020 PRINT '(A)',' BSF: ENTER T1 (IN KEV)?'
      READ *, EN
      IF ((EN.LT.1.).OR.(500.LT.EN)) THEN
        PRINT '(A)',' *** BSF: VALUE OF T1 OUTSIDE RANGE 1-500 KEV.'
        GOTO 1020
      ENDIF
C
C
C
C
C DO ENERGY INTERPOLATION
C
      N=6
C
      BETIN=SQRT((EN+511.)**2-511.**2)/(EN+511.)
      DO 11 I=1,5
      DO 11 J=1,NJAR
      JJ=JAR(J)
      DO 11 K=1,NKAR
      KK=KAR(K)
      DO 12 L=1,6
      XN(L)=BETA(L)
   12 FN(L)=BD(L,I,J,K)
      CALL SPCOFF(N,XN,FN,S,INDEX)
   11 B1(I,JJ,KK)=SPLINE(N,XN,FN,S,INDEX,BETIN)
C
C  COMPUTE NEAREST-NEIGHBOR ENTIES IN ENERGY SPECTRUM TABLE.
C
      DO 81 I=2,12
      LASTI=I
      IF(EN .LE. ENTEST(I)) GO TO 83
   81 CONTINUE
   83 ENH=ENTEST(LASTI)
      ENL=ENTEST(LASTI-1)
C
C  READ NEAREST-NEIGHBOR PHOTON ENERGY SPECTRA
C
      READ(10,'(A)') HEADER
      DO 86 K=1,1104
 2070 READ(10,* ,END=2080)IZ,EG,(SIG(1,J),J=1,12)
      GOTO 2090
 2080   PRINT '(A)',' BSF: REWINDING ENERGY SPECTRA DATA.'
        REWIND(UNIT=10)
        READ(10,'(A)') HEADER
        GOTO 2070
 2090 CONTINUE
      IF(IZ .NE. Z) GO TO 86
      IF(EG .EQ. ENL) GO TO 87
   86 CONTINUE
   87 READ(10, * )IZ,EG,(SIG(2,J),J=1,12)
C
C  INTERPOLATE ON PHOTON ENERGY SPECTRA
C
      DO 88 I=1,12
   88 SIG(1,I)=SIG(1,I)+(SIG(2,I)-SIG(1,I))*(EN-ENL)/(ENH-ENL)
C  SIG(1,I) NOW HAS THE INTERPOLATED VALUES OF ENERGY SPECTRA
C
C
C  BEGIN TO COMPUTE B VALUE INTERPOLATION IN Z AND K/T
C
      DO 30 I=1,5
      N=NKAR
      DO 40    L=1,NJAR
   35 J=JAR(L)
      DO 42 M=1,N
      K=KAR(M)
      FN(M)=B1(I,J,K)
   42 XN(M)=XKAR(K)
      CALL SPCOFF(N,XN,FN,S,INDEX)
      DO 50 M=1,11
      XI=XKAR(M)
   50 B1(I,J,M)=SPLINE(N,XN,FN,S,INDEX,XI)
   40 CONTINUE
      N=NJAR
      DO 60 K=1,11
      DO 62 M=1,N
      J=JAR(M)
      FN(M)=B1(I,J,K)
   62 XN(M)=J+1
      CALL SPCOFF(N,XN,FN,S,INDEX)
      DO 70 J=1,91
      XI=J+1
   70 B1(I,J,K)=SPLINE(N,XN,FN,S,INDEX,XI)
   60 CONTINUE
   30 CONTINUE
C   ALL B VALUE ARRAYS COMPLETE
C
C
C  BEGIN CALCULATION OF S FUNCTIONS
C
      J=Z-1
      DO 520 K=1,11
      B(1)=1.
      B(2)=B1(1,J,K)
      B(3)=B1(2,J,K)
      B(4)=B1(3,J,K)
      B(5)=B1(4,J,K)
      B(6)=B1(5,J,K)
      CALL SPRATT(BETIN,B,SAR,COST,SINT,A)
      AA(K)=A
      DO 522 L=1,37
  522 SARK(K,L)=SAR(L)
  520 CONTINUE
C  LINEAR INTERPOLATION FOR K/T=1
      DO 530 L=1,37
  530 SARK(12,L)=2.*SARK(11,L)-SARK(10,L)
C
      DO 540 I=1,37
  540 IANG(I)=(I-1)*5
C
C  BEGIN OUTPUT IN PUBLICATION FORMAT
C
      WRITE(11,102)Z,EN
  102 FORMAT('1',//,18X,'BREMSSTRAHLUNG ENERGY SPECTRUM AND'
     *,' SHAPE FUNCTIONS FOR Z=',I3,', T1=',F6.1,' KEV'
     *,/,1X,120('-')
     *,/,6X,'K/T1=',4X,'0.0',6X,'0.1',6X,'0.2',6X,'0.3',6X,'0.4'
     *,6X,'0.5',6X,'0.6',6X,'0.7',6X,'0.8',6X,'0.9',6X,'0.95',5X,'1.0'
     *,/,1X,120('-'))
  103 FORMAT(2X,'SPECTRUM=',F8.3,11F9.3)
      WRITE(11,103)(SIG(1,I),I=1,12)
      WRITE(11,104)
  104 FORMAT(5X,'ANGLE')
      DO 105 I=1,37
      IF(I .EQ. 7) GOTO 109
      IF(I .EQ. 13) GO TO 109
      IF(I .EQ. 19) GO TO 109
      IF(I .EQ. 25) GO TO 109
      IF(I .EQ. 31) GO TO 109
      GO TO 105
  109 WRITE(11,108)
  108 FORMAT(' ')
  105 WRITE(11,106)IANG(I),(SARK(J,I),J=1,12)
  106 FORMAT(5X,I3,2X,12F9.4)
C
      GOTO 1000
      END
      SUBROUTINE SPCOFF(N,XN,FN,S,INDEX)
C
C  THE SUBROUTINE SPCOFF AND THE FUNCTION SPLINE CALCULATE THE
C  NATURAL CUBIC INTERPOLATORY SPLINE FIT TO THE DATA SPECIFIED
C  BY THE ARRAY OF N NODES XN, WITH CORRESPONDING FUNCTION
C  VALUES IN THE ARRAY FN. THE NODES XN MUST BE DISTINCT. THE
C  SPLINE IS DETERMINED IN SPCOFF AND EVALUATED IN SPLINE. SPCOFF
C  ARRANGES THE NODES IN INCREASING ORDER AND STORES THIS ORDER IN
C  THE ARRAY INDEX. THE ARRAY XN ITSELF IS NOT ALERTED. SPCOFF
C  THEN CALCULATES THE ARRAY S OF SECOND DERIVATIVES NEEDED TO
C  DEFINE THE SPLINE. THE ARRAY@S XN,FN,S,AND INDEX MUST BE
C  DIMENSIONED IN THE CALLING PROGRAM.
C
      DIMENSION XN(N),FN(N),S(N),INDEX(N)
C
C  SPCOFF IS WRITTEN TO HANDLE PROBLEMS WITH UP TO TWENTY FIVE
C  NODES. IF MORE NODES ARE USED, ONLY THE NEXT STATMENT
C  NEED BE CHANGED. THE DIMENSION OF THE ARRAYS RHO AND TAU
C  MUST BE AT LEAST N.
C
      DIMENSION RHO(25),TAU(25)
      NM1=N-1
C
C  ARRANGE THE NODES XN IN INCREASING ORDER. STOP THE
C  ORDER IN THE ARRAY INDEX.
      DO 1 I=1,N
  1   INDEX(I)=I
      DO 3 I=1,NM1
      IP1=I+1
      DO2 J=IP1,N
      II=INDEX(I)
      IJ=INDEX(J)
      IF(XN(II).LE.XN(IJ))GOTO 2
      ITEMP=INDEX(I)
      INDEX(I)=INDEX(J)
      INDEX(J)=ITEMP
  2   CONTINUE
  3   CONTINUE
      NM2=N-2
C
C  CALCULATE THE ELEMENTS OF THE ARRAYS RHO AND TAU
C
      RHO(2)=0.0
      TAU(2)=0.0
      DO 4 I=2,NM1
      IIM1=INDEX(I-1)
      II=INDEX(I)
      IIP1=INDEX(I+1)
      HIM1=XN(II)-XN(IIM1)
      HI=XN(IIP1)-XN(II)
      TEMP=(HIM1/HI)*(RHO(I)+2.0)+2.0
      RHO(I+1)=-1.0/TEMP
      D=6.0*((FN(IIP1)-FN(II))/HI-(FN(II)-FN(IIM1))/HIM1)/HI
    4 TAU(I+1)=(D-HIM1*TAU(I)/HI)/TEMP
C
C  COMPUTE ARRAY OF SECOND DERIVATIVES S FOR THE NATURAL SPLINE
C
      S(1)=0.0
      S(N)=0.0
      DO 5 I=1,NM2
      IB=N-I
  5   S(IB)=RHO(IB+1)*S(IB+1)+TAU(IB+1)
      RETURN
      END
      FUNCTION SPLINE(N,XN,FN,S,INDEX,X)
C
C  THE FUNCTION SPLINE ACCEPTS AS INPUT THE QUANTITIES N, XN, FN,
C  S, AND INDEX AS DEFINED IN THE SUBROUTINE SPCOFF AND A NUMBER
C  X AT WHICH THE SPLINE IS TO BE EVALUATED. SPCOFF IS CALLED
C  ONCE EACH FIT. BUT SPLINE IS CALLED ONCE FOR EACH ARGUMENT
C  AT WHICH WE REQUIRE THE VALUE OF THE FIT.
C
      DIMENSION XN(N), FN(N),S(N),INDEX(N)
C
C  IF X.LT. XN(INDEX(1)), APPROXIMATE FUNCTION BY THE STRAIGHT
C  LINE WHICH PASSES THROUGH THE POINT (XN(INDEX(1)),FN(INDEX(1))
C  AND WHOSE SLOPE AGREES WITH THE SLOPE OF THE SPLINE AT THAT POINT.
C
      I1=INDEX(1)
      IF(X.GE.XN(I1))GO TO 1
      I2=INDEX(2)
      H1=XN(I2)-XN(I1)
      SPLINE =FN(I1)+(X-XN(I1))*((FN(I2)-FN(I1))/H1-H1*S(2)/6.0)
      RETURN
C
C  IF X.GE. XN(INDEX(N)). APPROXIMATE FUNCTIUON BY THE SRAIGHT LINE
C  WHICH PASSES THROUGH THE POINT (XN(INDEX(N)).FN(INDEX(N)) AND
C  WHOSE SLOPE AGREES WITH THE SLOPE OF THE SPLINE AT THAT POINT.
C
  1   IN=INDEX(N)
      IF(X.LE.XN(IN))GO TO 2
      INM1=INDEX(N-1)
      HNM1=XN(IN)-XN(INM1)
      SPLINE=FN(IN)+(X-XN(IN))*((FN(IN)-FN(INM1))/HNM1+HNM1*S(N-1)/6.0)
      RETURN
C
C  FOR XN(INDEX(1)).LE.X.LE.XN(INDEX(N)) CALCULATE SPLINE
C
  2   DO 3 I=2,N
      II=INDEX(I)
      IF(X.LE.XN(II))GO TO 4
  3   CONTINUE
  4   L=I-1
      IL=INDEX(L)
      ILP1=INDEX(L+1)
      A=XN(ILP1)-X
      B=X-XN(IL)
      HL=XN(ILP1)-XN(IL)
      SPLINE=A*S(L)*(A**2/HL-HL)/6.0+B*S(L+1)*(B**2/HL-HL)/6.0
     1 +(A*FN(IL)+B*FN(ILP1))/HL
      RETURN
      END
C
      SUBROUTINE SPRATT(BETA,B,S,COST,SINT,A)
      DIMENSION P(6),B(6), COST(1800),SINT(1800),S(37)
      P(1)=1.
      SS=0.
      PI=3.141592654
      DTH=0.1*PI/180.
      DO30 I=1,1800
      X=COST(I)
      Y=SINT(I)
      P(2)=X
      P(3)=1.5*X*X-.5
      P(4)=2.5*X**3-1.5*X
      P(5)=4.375*X**4-3.75*X*X+.375
      P(6)=7.85*X**5-8.75*X**3+1.875*X
      SUM=0.
      DO 40 K=1,6
      SUM=SUM +(B(K)*P(K))/(1.-BETA*X)**4.5
  40  CONTINUE
      SS=SS+SUM*Y/4./PI
  30  CONTINUE
      A=1./SS/2./PI/DTH
C
      DO 10 J=1,37
      I=(J-1)*5
      THETA=FLOAT(I)
      X=COS(THETA*PI/180.)
      P(2)=X
      P(3)=0.5*(3.*X*X-1.)
      P(4)=0.5*X*(5.*X*X -3.)
      P(5)=.125*((35.*X*X-30.)*X*X+3.)
      P(6)=.125*X*((63.*X*X-70.)*X*X+15.)
      SUM=0.
      DO 20 K=1,6
      SUM=SUM+(B(K)*P(K))/(1.-BETA*X)**4.5
  20  CONTINUE
      S(J) =(1./(4.*PI))*SUM*A
   10 CONTINUE
      RETURN
      END
